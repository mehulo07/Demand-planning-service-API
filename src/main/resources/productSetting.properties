getProductCategoryDetail = SELECT  p.prod_cat_id,  p.prod_cat_name,  p.prod_cat_desc , p.status ,  CASE WHEN  p.PROD_CAT_ID = ( select u.ALLOW_CONFIG_ID from   ifsapp.dps_user_config_tab u where p.PROD_CAT_ID=u.ALLOW_CONFIG_ID and u.userid= ? ) THEN 'Allowed' ELSE 'Not Allowed' END   Access_  from  ifsapp.DPS_PROD_CAT_MASTER_TAB P  where p.status = ? 
getStockCategoryBeanDetail =  SELECT stk.STOCK_CAT_ID,  stk.STOCK_CAT_NAME,  stk.STOCK_CAT_DESC,  stk.STATUS,  stk.STOCK_CAT_COLOR_ID,( SELECT col_.color_code FROM ifsapp.dps_color_code_tab col_ WHERE col_.color_id = stk.stock_cat_color_id AND ROWNUM < 2 ) stock_cat_color_code,(select col_.color_name from ifsapp.DPS_COLOR_CODE_TAB col_ where col_.color_id = stk.stock_cat_color_id and rownum < 2) stock_cat_color_name, CASE WHEN  stk.STOCK_CAT_ID = ( select u.ALLOW_CONFIG_ID from ifsapp.dps_user_config_tab u where stk.STOCK_CAT_ID=u.ALLOW_CONFIG_ID and u.userid= ? ) THEN 'Allowed' ELSE 'Not Allowed' END   Access_ FROM  ifsapp.DPS_STOCK_CAT_MASTER_TAB stk  WHERE stk.STATUS = ?
getTemplateTypeBeanDetail = SELECT p.prod_type_id,p.prod_type_name,p.prod_type_desc, p.status, CASE WHEN  p.prod_type_id = ( select u.ALLOW_CONFIG_ID from ifsapp.dps_user_config_tab u where p.prod_type_id=u.ALLOW_CONFIG_ID and u.userid = ? ) THEN 'Allowed' ELSE 'Not Allowed' END   Access_  from  ifsapp.DPS_PROD_TYPE_TAB P where p.status = ?

#getProductList = select * FROM  PRICEMATRIX WHERE CONTRACT = ? AND CATALOG_TYPE =? AND UPPER(CATALOG_DESC) LIKE UPPER(?) AND  ROWNUM < ?
getProductList = select * FROM ifsapp.PRICEMATRIX WHERE CONTRACT = ? AND CATALOG_TYPE LIKE (select PROD_CAT_NAME from  ifsapp.DPS_PROD_CAT_MASTER_TAB WHERE  PROD_CAT_ID =?) AND UPPER(CATALOG_DESC) LIKE UPPER(?) AND  ROWNUM < ? 

getTransactionId = select to_char( ifsapp.DPS_TRANSACTION_SEQ.NEXTVAL) TRANSACTION_ID from dual

insertProductSettingMaster = insert into  ifsapp.DPS_PROD_PARAM_MASTER_TAB(TRANSACTION_ID,REF_PROD_CAT_ID,CATALOG_NO,UPDATED_BY,UPDATED_ON,status) values(?,?,?,?,systimestamp,?)
insertProductSettingDetail = insert into  ifsapp.DPS_PROD_PARAM_DETAIL_TAB(TRANSACTION_ID,STK_CAT_ID,STK_CAT_FROM,STK_CAT_TO,UPDATED_BY,UPDATED_ON) values(?,?,?,?,?,systimestamp)

updateProductSettingMaster = update ifsapp.DPS_PROD_PARAM_MASTER_TAB set UPDATED_BY = ?,UPDATED_ON = systimestamp,status = ? where TRANSACTION_ID = ?

getProductSettingMasterWithCatalog = select TRANSACTION_ID,REF_PROD_CAT_ID,CATALOG_NO from  ifsapp.dps_prod_param_master_tab where REF_PROD_CAT_ID = ? and CATALOG_NO = ? and status = ? order by UPDATED_ON desc
getProductSettingMasterWithOutCatalog = select TRANSACTION_ID,REF_PROD_CAT_ID,CATALOG_NO from  ifsapp.dps_prod_param_master_tab where REF_PROD_CAT_ID = ? and CATALOG_NO is null and status = ? order by UPDATED_ON desc

getProductParamHead = select * from  ifsapp.DPS_PROD_PARAM_MASTER_TAB where REF_PROD_CAT_ID = ?  and nvl(CATALOG_NO ,'-') = ?  and status = ? and UPDATED_ON between to_Date( ? ,'YYYY-MM-DD') and to_Date( ? ,'YYYY-MM-DD') +1
getProductParamMasterByTransactionId =  select * from  ifsapp.DPS_PROD_PARAM_MASTER_TAB where TRANSACTION_ID =  ?

getProductDetailByTransactionId = select A.* , B.STOCK_CAT_NAME from  ifsapp.DPS_PROD_PARAM_DETAIL_TAB A ,    ifsapp.DPS_STOCK_CAT_MASTER_TAB B WHERE A.STK_CAT_ID = B.STOCK_CAT_ID AND A.TRANSACTION_ID = ?
getTransactionIdByCategory =  select TRANSACTION_ID from  ifsapp.DPS_PROD_PARAM_MASTER_TAB  where REF_PROD_CAT_ID = ? and catalog_no is not null and UPDATED_ON between to_Date( ? ,'YYYY-MM-DD') and to_Date( ? ,'YYYY-MM-DD') +1

deleteProductSettingMasterWithTransId = delete from  ifsapp.DPS_PROD_PARAM_MASTER_TAB where Transaction_Id = ? and nvl(REF_PROD_CAT_ID,'-') = ? and nvl(catalog_no,'-')= ? 

deleteProductSettingMasterWithOutTransId = delete from  ifsapp.DPS_PROD_PARAM_MASTER_TAB where trunc(updated_on,'mm')=trunc(sysdate,'mm') and ref_prod_cat_id = ?

deleteProductSettingDetailWithTransId = delete from  ifsapp.DPS_PROD_PARAM_DETAIL_TAB where Transaction_Id = ?

deleteProductSettingDetailTab = delete  from  ifsapp.DPS_PROD_PARAM_DETAIL_TAB where Transaction_id not in(select transaction_id from  ifsapp.DPS_PROD_PARAM_MASTER_TAB)

getProductName = select catalog_desc detail from  ifsapp.pricematrix where contract=? and catalog_no =?

getTransactionIdBasedOnProductAndCategory = select * from  DPS_PROD_PARAM_master_TAB  WHERE REF_PROD_CAT_ID = ?  AND nvl(CATALOG_NO ,'-') = ?  and  ( UPDATED_ON BETWEEN TO_DATE (?, 'YYYY-MM-DD') AND TO_DATE (?, 'YYYY-MM-DD') +1)
getCategoryName = select PROD_CAT_NAME from ifsapp.DPS_PROD_CAT_MASTER_TAB where PROD_CAT_ID = ? 